#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>
#include <stdlib.h>

//1.实现一个函数，打印乘法口诀表，口诀表的行数和列数自己指定，
//输入9，输出9 * 9口诀表，输入12，输出12 * 12的乘法口诀表。
//void print(int i)
//{
//	int a = 0;
//	int b = 0;
//	int ret = 0;
//	for (a = 1; a <= i; a++)
//	{
//		for (b = 1; b <= a; b++)
//		{
//			ret = a * b;
//			printf("%d * %d = %d  ",a,b,ret);
//		}
//		printf("\n");
//	}
//}
//int main()
//{
//	int i = 0;
//	scanf("%d", &i);
//	print(i);
//	system("pause");
//	return 0;
//}

//2.使用函数实现两个数的交换。

//void swap(int *x, int *y)
//{
//	/*int tmp = 0;
//	tmp = *x;
//	*x = *y;
//	*y = tmp;*/
//	
//	*x = *x ^ *y;
//	*y = *x ^ *y;
//	*x = *x ^ *y;
//
//}
//int main()
//{
//	int a = 1;
//	int b = 2;
//	swap(&a, &b);
//	printf("a = %d, b = %d", a, b);
//	system("pause");
//	return 0;
//}

//3.实现一个函数判断year是不是润年。

//int fun(int x)
//{
//	if (x % 4 == 0 && x % 100 != 0 || x % 400 == 0)
//	{
//		return 1;
//	}
//	return 0;
//}
//int main()
//{
//	int i = 0;
//	scanf("%d", &i);
//	if (1 == fun(i))
//	{
//		printf("%d是闰年\n", i);
//	}
//	else
//		printf("%d不是闰年\n", i);
//	system("pause");
//	return 0;
//}

//4.
//创建一个数组，
//实现函数init（）初始化数组、
//实现empty（）清空数组、
//实现reverse（）函数完成数组元素的逆置。
//要求：自己设计函数的参数，返回值。

//void init(int arr[],int ret)
//{
//	int i = 0;
//	for (i = 0; i < ret; i++)
//	{
//		scanf("%d",&arr[i]);
//	}
//}
//void empty(int arr[],int ret)
//{
//	int i = 0;
//	for (i = 0; i < ret; i++)
//	{
//		arr[i] = 0;
//	}
//
//}
//void reverse(int arr[], int left,int right)
//{
//	while (left < right)
//	{
//		int tmp = 0;
//		tmp = arr[right];
//		arr[right] = arr[left];
//		arr[left] = tmp;
//		left++;
//		right--;
//	}
//}
//void print(int arr[],int ret)
//{
//	int i = 0;
//	for (i = 0; i < ret; i++)
//	{
//		printf("%d ", arr[i]);
//	}
//	printf("\n");
//}
//int main()
//{
//	int i = 0;
//	int arr[10] = { 0 };
//	int ret = sizeof(arr) / sizeof(arr[0]);
//	printf("初始化数组\n");
//    init(arr,ret);
//	int arr1[10] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
//	int ret1 = sizeof(arr1) / sizeof(arr1[0]);
//	print(arr1, ret1);
//	printf("清空数组\n");
//	empty(arr1,ret1);
//	print(arr1, ret1);
//	int arr2[10] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
//	int ret2 = sizeof(arr2) / sizeof(arr2[0]);
//	int left = 0;
//	int right = ret2 - 1;
//	print(arr2, ret2);
//	printf("数组逆转\n");
//	reverse(arr2,left,right);
//	print(arr2, ret2);
//	system("pause");
//	return 0;
//}

//5.实现一个函数，判断一个数是不是素数。
//#include <math.h>
//int fun(int x)
//{
//	int a = sqrt(x);
//	int b = 0;
//	for (b = 2; b <= a; b++)
//	{
//		if (x % b == 0)
//		{
//			return 0;
//		}
//		
//	}
//	
//	return 1;
//}
//int main()
//{
//	int i = 0;
//	scanf("%d", &i);
//	if (1 == fun(i))
//	{
//		printf("%d 是素数\n",i);
//	}
//	else
//		printf("%d 不是素数\n",i);
//	system("pause");
//	return 0;
//}
