# c-program
#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<stdlib.h>
//1.编写函数：
//unsigned int reverse_bit(unsigned int value);
//这个函数的返回值value的二进制位模式从左到右翻转后的值。
//unsigned int reverse_bit(unsigned int value)
//{
//	unsigned int sum = 0;
//	int i = 0;
//	for (i = 0; i < 32; i++)
//	{
//		sum <<= 1;
//		sum |= (value >> i) & 1;// 按位或：  两个相应的二进制位中只要有一个为1，该位的结果值为1。
//
//	}
//	return sum;
//}
/*#include<math.h>
unsigned int reverse_bit(unsigned int value)
{
	unsigned int sum = 0;
	int i = 0;
	for (i = 0; i < 32; i++)
	{
		sum += ((value >> i) & 1) * (pow(2, 31 - i));

	}
	return sum;
}
int main()
{
	int a = 25;
	int ret =  reverse_bit(a);
	printf("%u ", ret);
	system("pause");
	return 0;
}*/
//
//2.不使用（a + b） / 2这种方式，求两个数的平均值。

//int average(int x, int y)
//{
//	return (x + y) >> 1;
//	
//}
/*int average(int x, int y)
{
	return x + ((y - x) >> 1);
}
int main()
{
	int a = 3;
	int b = 7;
	int ret = average(a, b);
	printf("%d ", ret);
	system("pause");
	return 0;
}*/
//3.编程实现：
//一组数据中只有一个数字出现了一次。其他所有数字都是成对出现的。
//请找出这个数字。（使用位运算）
// ^ :二进制位中相同为0，不同为1。
//int main()
//{
//	int arr[9] = { 1, 2, 3, 4, 5, 4, 3, 2, 1 };
//	int i = 0;
//	int num = 0;
//	for (i = 0; i < sizeof(arr) / sizeof(arr[0]); i++)
//	{
//		num ^= arr[i];
//	}
//	printf("%d ", num);
	//
	//int a = 5;
	//int b = 3;
	//int c = 3;
	//
	//int ret = (a^b) ^ c;
	//printf("%d ", ret);
	
	//0001
	//0010
	// a 0011
	// b 0001
	// a 0010
//	system("pause");
//	return 0;
//}

//4.
//有一个字符数组的内容为:"student a am i",
//请你将数组的内容改为"i am a student".
//要求：
//不能使用库函数。
//只能开辟有限个空间（空间个数和字符串的长度无关）
#include<assert.h>
int my_strlen(const char *str)
{
	assert(str != NULL);
	int count = 0;
	while (*str)
	{
		count++;
		str++;
	}
	return count;

}
void reverse_str(char *left, char *right)
{
	assert(left);
	assert(right);
	while (left<right)
	{
		char tmp = *left;
		*left = *right;
		*right = tmp;
		left++;
		right--;

	}
}
void reverse(char *str, int len)
{
	assert(str != NULL);
	//逆序字符串 "i ma a tneduts"
	reverse_str(str, str + len - 1);
	//逆序单词
	while (*str)
	{
		char *start = str;
		while ((*str != ' ')&& (*str != '\0'))
		{
			str++;
		}
		reverse_str(start, str-1);
		if (*str != '\0');
		str++;
	}

}
int main()
{
	char arr[] = "student a am i";//i ma a tneduts /i am a student
	int len = my_strlen(arr);
	reverse(arr, len);
	printf("%s\n", arr);
	system("pause");
	return 0;
}
