#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>
#include <stdlib.h>

//int main()
//{
//	int arr[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
//	int key = 7;
//	int left = 0;
//	int len = sizeof(arr) / sizeof(arr[0]);
//	int right = len - 1;
//	while (left <= right)
//	{
//		int mid = left + (right-left) / 2;// mid = (left + right)>>1
//		if (arr[mid] == key)
//		{
//			printf("找到了,是%d\n",mid);
//			break;
//		 }
//		else if (arr[mid] > key )
//		{
//			right = mid - 1;
//		 }
//		else if (arr[mid] < key)
//		 {
//			left = mid + 1;
//        }
//	}
//	if (left > right)
//	{
//		printf("找不到");
//	}
//	system("pause");
//	return 0;
//}


//用函数实现折半查找

//int bin_search(int arr[], int left, int right, int key)
//{
//	int mid = 0;
//	while (left <= right)
//	{
//		mid = (left + right) >> 1;//mid = left + (right - left) / 2;
//		if (arr[mid] > key)
//		{
//			right = mid - 1;
//		}
//		else if (arr[mid] < key)
//		{
//			left = mid + 1;
//		}
//		else if (arr[mid] == key)
//		{
//			return mid;
//		}
//	}
//	return -1;
//}
//int main()
//{
//	int arr[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
//	int left = 0;
//	int right = sizeof(arr) / sizeof(arr[0]) - 1;
//	int key =11;
//	int ret = bin_search(arr,left,right,key);
//	printf("%d", ret);
//	system("pause");
//	return 0;
//}
